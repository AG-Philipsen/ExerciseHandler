This file is intended to keep track of work that should be done in the future,
trying to classify it according to priority.

HIGH PRIORITY:

 - About presence sheet, split latex code in auxiliary files (Packages.tex, Definitions.tex
   and Document.tex), so that the ProducePresenceSheetTexMainFile looks like the
   ProduceExerciseTexMainFile one. This may be done implementing three functions in
   PresenceSheet.bash file. This will uniform the code.
    * The function ProduceTexAuxiliaryFiles could be used adding to it an if-else
      on the EXHND_makePresenceSheet in which some local variables setup is done
      before calling one after each other the three functions
        1) CreatePackagesFilename
        2) CreateDefinitionsFilename
        3) CreateBodyFilename
    * In the ProducePresenceSheet function the function ProduceTexAuxiliaryFiles would
      be called before ProducePresenceSheetTexMainFile and no function would have to
      pass arguments around.

 - Use EXHND_packagesFilename, EXHND_definitionsFilename and EXHND_bodyFilename in
   Produce*MainTexFile functions -> $(basename ${EXHND_variable%.tex})


NORMAL PRIORITY:

 - At the moment, if the fix final option is given, we remove the final folder and recreate it.
   However, if the user forgot to close a file in that folder, the rm -r command fail and the script
   aborts. This is bad, because usually the rm -r command will have already deleted partially
   the final folder! A workaround for the user is to recreate the final sheet in this case, but
   it is not so friendly. It would be nice if the handler would take care of this situation.
   -> Think about a possible solution. Have a look to "lsof +D DIR" command.

 - Should it be possible to write a solution of an exam? Decide and in case implement.

 - Should there be a column "available score" in the exam cover page table? If yes, how
   to achieve it? A possibility would be to check if points were provided to exercises
   (Error if not) and extract them in Bash. Then these number should be passed to
   the \ExamCoverPage command with a second argument.

 - Give the possibility to the user to create her/his own theme. Implement option
   to abilitate this and pass the file. This should contain the needed commands
   (\Heading, etc.) and it should be input in the main tex file. Add description
   to README file where commands to be provided should be listed. Decide whether we
   expect to get the full path to the custom theme as an argument to the command line
   option, or we use a field in localdefs for the path and the command line option to
   just pass the name (useful also if we will ever have a folder with many available themes).

 - How to support multiple languages? So far only english. -> https://tex.stackexchange.com/a/42791

LOW PRIORITY:

 - Trap CTRL-C in a nice way: cleaning files/folders. etc. -> DESIGN
 - Use consistent exit error codes (now they are hard coded and without a meaning)
 - Is it worth to make the handler fill the optional latex argument of the solution
   environment if empty, reading it from the corresponding exercise?
 - Refactor the LaTeX theme in order to give much more freedom to the user.
    * Each sheet should have a own \Head and a \Sheet command
    * In the classic theme, where we use the same \Head across all sheets,
      we can implement an internal \genericHead command and use it in
      all the provided \nameHead commands.
 - Use consistently quotation marks, in particular in filenames -> consider possible names
   in spaces?!
 - Use only printf, no echo.
